@model pruebarestaurante.Models.PlatilloIngredienteViewModel
@{
    ViewData["Title"] = "Editar Platillo";
}
@section Scripts {
    <script src="~/js/site.js"></script>
}

<div class="jumbotron">
    <h1 class="text-center restaurant-name">@ViewData["Title"]</h1>
</div>
<form asp-action="Actualizar" method="post">
    <input type="hidden" asp-for="idPlatillo" />
    <div class="form-group">
        <label>Nombre platillo:</label>
        <input asp-for="nombrePlatillo" class="form-control" />
    </div>
    <div class="form-group">
        <label>Precio:</label>
        <input asp-for="precioPlatillo" class="form-control" />
    </div>
    <div class="form-group">
        <label>Descripci√≥n:</label>
        <input asp-for="descripcionPlatillo" class="form-control" />
    </div>

    <h4>Ingredientes:</h4>

    @for (int i = 0; i < Model.Ingredientes.Count; i++)
    {
        <div class="form-group">
            <label>Nombre ingrediente:</label>
            <input name="Ingredientes[@i].nombreIngrediente" value="@Model.Ingredientes[i].nombreIngrediente"
                class="form-control ingredient-input" readonly />
        </div>
        <div class="form-group">
            <label>Cantidad disponible:</label>
            <input name="Ingredientes[@i].cantidadDisponible" value="@Model.Ingredientes[i].cantidadDisponible"
                class="form-control ingredient-input" readonly />
        </div>
        <input type="hidden" name="Ingredientes[@i].idIngrediente" value="@Model.Ingredientes[i].idIngrediente" />
    }

    <button type="submit" class="btn btn-primary">Actualizar</button>
</form>

<div class="alert alert-warning mt-3" role="alert" id="editWarning" style="display: none;">
    Solo se puede editar un campo a la vez.
</div>

<script>
    var ingredientInputs = document.querySelectorAll('.ingredient-input');

    ingredientInputs.forEach(function (input) {
        input.addEventListener('click', function () {
            if (!this.readOnly) {
                return;
            }

            var hasEditableField = Array.from(ingredientInputs).some(function (i) {
                return !i.readOnly;
            });

            if (hasEditableField) {
                document.getElementById('editWarning').style.display = 'block';
                return;
            }

            ingredientInputs.forEach(function (i) {
                i.readOnly = true;
                i.classList.remove('editable');
            });

            this.readOnly = false;
            this.classList.add('editable');

            document.getElementById('editWarning').style.display = 'none';
        });
    });
</script>

